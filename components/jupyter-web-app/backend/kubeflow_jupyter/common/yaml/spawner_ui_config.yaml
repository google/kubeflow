# Configuration file for the Notebook Spawner UI.
#
spawnerFormDefaults:
  image:
    # the image to pre-select
    value: gcr.io/kubeflow-images-public/tensorflow-1.13.1-notebook-cpu:v0.5.0
    # the list of available images
    options:
      - gcr.io/kubeflow-images-public/tensorflow-1.10.1-notebook-cpu:v0.5.0
      - gcr.io/kubeflow-images-public/tensorflow-1.10.1-notebook-gpu:v0.5.0
      - gcr.io/kubeflow-images-public/tensorflow-1.11.0-notebook-cpu:v0.5.0
      - gcr.io/kubeflow-images-public/tensorflow-1.11.0-notebook-gpu:v0.5.0
      - gcr.io/kubeflow-images-public/tensorflow-1.12.0-notebook-cpu:v0.5.0
      - gcr.io/kubeflow-images-public/tensorflow-1.12.0-notebook-gpu:v0.5.0
      - gcr.io/kubeflow-images-public/tensorflow-1.13.1-notebook-cpu:v0.5.0
      - gcr.io/kubeflow-images-public/tensorflow-1.13.1-notebook-gpu:v0.5.0
      - gcr.io/kubeflow-images-public/tensorflow-2.0.0a-notebook-cpu:v0.5.0
      - gcr.io/kubeflow-images-public/tensorflow-2.0.0a-notebook-gpu:v0.5.0
    # [if: true] user will be able to select from `options`
    # [if: false] user will be able to provide a custom image
    readOnly: false
  cpu:
    # the CPU request to pre-fill
    # [if: null] will NOT be pre-filled
    value: "0.5"
    # [if: true] a CPU limit will be set equal to the request
    setLimit: false
    # [if: true] you can set `value` to null for NO request
    readOnly: false
  memory:
    # the RAM request to pre-fill
    # [if: null] will NOT be pre-filled
    value: "1.0Gi"
    # [if: true] a RAM limit will be set equal to the request
    setLimit: false
    # [if: true] you can set `value` to null for NO request
    readOnly: false
  gpus:
    value:
      # the number of GPUs to pre-select
      num: "none"
      # the list of available `num`
      nums:
        - "1"
        - "2"
        - "4"
        - "8"
      # the `vendors.limitsKey` to pre-populate
      # [if: ""] will NOT be pre-populated
      vendor: ""
      # the list of available vendors
      # [vendors.limitsKey] the limit key sent to the backend
      # [vendors.uiName] the value displayed in the UI
      vendors:
        - limitsKey: "nvidia.com/gpu"
          uiName: "NVIDIA"
        - limitsKey: "amd.com/gpu"
          uiName: "AMD"
    readOnly: false
  workspaceVolume:
    # the Workspace Volume configs to pre-populate
    value:
      type:
        # the volume type to pre-select
        # values: {"New", "Existing"}
        value: "New"
      name:
        # the PVC name to pre-fill
        # [templated values]
        #  - {notebook-name} the name of the Notebook Server
        value: "workspace-{notebook-name}"
      size:
        # the size of the PVC to pre-fill
        value: "10Gi"
      mountPath:
        # the mount-point of the PVC to pre-fill
        value: "/home/jovyan"
        # [if: false] use will be able to change the mount point
        readOnly: true
      accessModes:
        # the access-mode of the PVC to pre-select
        # values: {"ReadWriteOnce", "ReadWriteMany", "ReadOnlyMany}
        value: "ReadWriteOnce"
      class:
        # the storage-class of the PVC to pre-select
        # [templated values]
        #  - {none} the cluster's DefaultStorageClass
        #  - {empty}: empty string ""
        value: "{none}"
    readOnly: false
  dataVolumes:
    # the list of Data Volumes to pre-populate
    # [example]
    # - value:
    #     type:
    #       value: "New"
    #     name:
    #       value: "{notebook-name}-data-volume"
    #     size:
    #       value: "32Gi"
    #     mountPath:
    #       value: "/home/jovyan/data-volume"
    #     accessModes:
    #       value: "ReadWriteMany"
    #     class:
    #       value: "{none}"
    value: []
    # the default configs when the user clicks "add volume"
    default:
      type:
        # the volume type to pre-select
        # values: {"New", "Existing"}
        value: "New"
      name:
        # the PVC name to pre-fill
        # [templated values]
        #  - {notebook-name} the name of the Notebook Server
        #  - {volume-id} replaced with an integer ensure unique names
        value: "{notebook-name}-data-vol-{volume-id}"
      size:
        # the size of the PVC to pre-fill
        value: "10Gi"
      mountPath:
        # the mount-point of the PVC to pre-fill
        # [templated values]
        #  - {volume-id} replaced with an integer ensure unique names
        value: "/home/jovyan/data-vol-{volume-id}"
      accessModes:
        # the access-mode of the PVC to pre-select
        # values: {"ReadWriteOnce", "ReadWriteMany", "ReadOnlyMany}
        value: "ReadWriteOnce"
      class:
        # the storage-class of the PVC to pre-select
        # [templated values]
        #  - {none} the cluster's DefaultStorageClass
        #  - {empty}: empty string ""
        value: "{none}"
    readOnly: false
  affinityConfig:
    # the `options.configKey` to pre-select
    value: "none"
    # the list of available affinity configs
    options:
      - configKey: "none"
        displayName: "None"
        affinity: {}
    ## (DESC) select "n1-standard-2" node-pool
    ## (TIP) set `ports.hostPort` to stop Notebooks being on the same Node
    ## (TIP) set a `PreferNoSchedule` taint on this node-pool
    ## (TIP) enable cluster-autoscaler on this node-pool
    ## (TIP) tell users NOT to request more CPU/RAM than the size of the Node,
    ##       or disable CPU/RAM requests by setting:
    ##         `cpu.value=null`, `cpu.readOnly=true`
    ##         `memory.value=null`, `memory.readOnly=true`
    # - configKey: "exclusive__n1-standard-2"
    #   displayName: "Exclusive: n1-standard-2"
    #   affinity:
    #     nodeAffinity:
    #       requiredDuringSchedulingIgnoredDuringExecution:
    #         nodeSelectorTerms:
    #           - matchExpressions:
    #               - key: "node_pool"
    #                 operator: "In"
    #                 values:
    #                   - "notebook-n1-standard-2"
    readOnly: false
  tolerationGroup:
    # the `options.groupKey` to pre-select
    value: "none"
    # the list of available tolerationGroup configs
    options:
      - groupKey: "none"
        displayName: "None"
        tolerations: []
    # - groupKey: "group_1"
    #   displayName: "Group 1: description"
    #   tolerations:
    #     - key: "key1"
    #       operator: "Equal"
    #       value: "value1"
    #       effect: "NoSchedule"
    #     - key: "key2"
    #       operator: "Equal"
    #       value: "value2"
    #       effect: "NoSchedule"
    readOnly: false
  configurations:
    # the list of PodDefault labels to pre-select
    value: []
    readOnly: false
  shm:
    # the default state of the "Enable Shared Memory" toggle
    value: true
    readOnly: false
  ports:
    # the web port exposed by the notebook container
    containerPort: 8888
    # the Node hostPort assigned to the notebook container
    # (TIP) setting this will stop Notebook Pods being assigned to the same Node
    hostPort: null
